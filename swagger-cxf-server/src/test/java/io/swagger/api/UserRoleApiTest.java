/**
 * VLV Admin API
 * This is the description for the VLV Admin API. This api allows for user management, role management, role to user assignment and account to user assigment
 *
 * OpenAPI spec version: 1.0.2
 * Contact: francisco.j.prata@accenture.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.api;

import java.util.List;
import io.swagger.model.Role;
import org.junit.Test;
import org.junit.Before;
import static org.junit.Assert.*;

import javax.ws.rs.core.Response;
import org.apache.cxf.jaxrs.client.JAXRSClientFactory;
import org.apache.cxf.jaxrs.client.ClientConfiguration;
import org.apache.cxf.jaxrs.client.WebClient;


import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;




/**
 * API tests for UserRoleApi
 */
public class UserRoleApiTest {


    private UserRoleApi api;
    
    @Before
    public void setup() {
        JacksonJsonProvider provider = new JacksonJsonProvider();
        List providers = new ArrayList();
        providers.add(provider);
        
        api = JAXRSClientFactory.create("https://localhost:443/security/v1", UserRoleApi.class, providers);
        org.apache.cxf.jaxrs.client.Client client = WebClient.client(api);
        
        ClientConfiguration config = WebClient.getConfig(client); 
    }

    
    /**
     * Remove roles from user
     *
     * Delete an array of roles from user
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteRoleUserTest() {
        String id = null;
        List<Role> body = null;
        //api.deleteRoleUser(id, body);
        
        // TODO: test validations
        
        
    }
    
    /**
     * manage user role assignments
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserRolesTest() {
        Integer id = null;
        //List<Role> response = api.getUserRoles(id);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * Assign roles to user
     *
     * Add an array of roles to the user (upsert)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateRoleUserTest() {
        String id = null;
        List<Role> body = null;
        //Role response = api.updateRoleUser(id, body);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
}
